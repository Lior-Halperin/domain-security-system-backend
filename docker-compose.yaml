version: '3'

# All services defined:
services:

  # Todo - add services to DB:
  database:
  
    image: mysql:8.0
    container_name: mysqlcontainer
    command: --default-authentication-plugin=caching_sha2_password
    
    # profiles:
    #   - database_services 

    volumes: # source:destination:access mode 
      # - ./domain-security:/opt/lampp/htdocs:rw
      - ./init.sql:/docker-entrypoint-initdb.d/0_init.sql:rw  # Mount the initialization script
      - ./my.cnf:/etc/mysql/my.cnf:ro
      # - sqlCommends:/docker-entrypoint-initdb.d/0_init.sql:rw  # Mount the initialization script

  # volumes: # Use a named volume prevents Docker from creating a new volume for each run, which will take up extra memory on the host machine
  #   sqlCommends: ./init.sql

    ports:
      - 3306:3306

    # Environment veriables:
    env_file:
      - .env

  # Service name:
  backend-service:

  # Service profiles allow you to specify which groups of containers to start and stop or establish a default group
    # profiles: 
    #   - backend_services

    # Container name:
    container_name: backend-container

    # Restart policy (when to restart if crashed/stoped):
    restart: unless-stopped

    # Image name to build:
    image: liorhalperin/domain-security-backend:1.0

    # Image location:
    build: .

    # Port binding (host-port: container-port):
    ports:
      - 3002:3002
    depends_on:
      - database

    # Environment veriables:
    env_file:
      - .env

    # Start our backend when container started:
    command: npm start  
